/**
 * Bundled by jsDelivr using Rollup v2.79.1 and Terser v5.19.0.
 * Original file: /npm/@scure/base@1.1.1/lib/esm/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */
function r(r){if(!Number.isSafeInteger(r))throw new Error(`Wrong integer: ${r}`)}function e(...r){const e=(r,e)=>o=>r(e(o));return{encode:Array.from(r).reverse().reduce(((r,o)=>r?e(r,o.encode):o.encode),void 0),decode:r.reduce(((r,o)=>r?e(r,o.decode):o.decode),void 0)}}function o(e){return{encode:o=>{if(!Array.isArray(o)||o.length&&"number"!=typeof o[0])throw new Error("alphabet.encode input should be an array of numbers");return o.map((o=>{if(r(o),o<0||o>=e.length)throw new Error(`Digit index outside alphabet: ${o} (alphabet: ${e.length})`);return e[o]}))},decode:r=>{if(!Array.isArray(r)||r.length&&"string"!=typeof r[0])throw new Error("alphabet.decode input should be array of strings");return r.map((r=>{if("string"!=typeof r)throw new Error(`alphabet.decode: not string element=${r}`);const o=e.indexOf(r);if(-1===o)throw new Error(`Unknown letter: "${r}". Allowed: ${e}`);return o}))}}}function n(r=""){if("string"!=typeof r)throw new Error("join separator should be string");return{encode:e=>{if(!Array.isArray(e)||e.length&&"string"!=typeof e[0])throw new Error("join.encode input should be array of strings");for(let r of e)if("string"!=typeof r)throw new Error(`join.encode: non-string input=${r}`);return e.join(r)},decode:e=>{if("string"!=typeof e)throw new Error("join.decode input should be string");return e.split(r)}}}function t(e,o="="){if(r(e),"string"!=typeof o)throw new Error("padding chr should be string");return{encode(r){if(!Array.isArray(r)||r.length&&"string"!=typeof r[0])throw new Error("padding.encode input should be array of strings");for(let e of r)if("string"!=typeof e)throw new Error(`padding.encode: non-string input=${e}`);for(;r.length*e%8;)r.push(o);return r},decode(r){if(!Array.isArray(r)||r.length&&"string"!=typeof r[0])throw new Error("padding.encode input should be array of strings");for(let e of r)if("string"!=typeof e)throw new Error(`padding.decode: non-string input=${e}`);let n=r.length;if(n*e%8)throw new Error("Invalid padding: string should have whole number of bytes");for(;n>0&&r[n-1]===o;n--)if(!((n-1)*e%8))throw new Error("Invalid padding: string has too much padding");return r.slice(0,n)}}}function i(r){if("function"!=typeof r)throw new Error("normalize fn should be function");return{encode:r=>r,decode:e=>r(e)}}function d(e,o,n){if(o<2)throw new Error(`convertRadix: wrong from=${o}, base cannot be less than 2`);if(n<2)throw new Error(`convertRadix: wrong to=${n}, base cannot be less than 2`);if(!Array.isArray(e))throw new Error("convertRadix: data should be array");if(!e.length)return[];let t=0;const i=[],d=Array.from(e);for(d.forEach((e=>{if(r(e),e<0||e>=o)throw new Error(`Wrong integer: ${e}`)}));;){let r=0,e=!0;for(let i=t;i<d.length;i++){const s=d[i],f=o*r+s;if(!Number.isSafeInteger(f)||o*r/o!==r||f-s!=o*r)throw new Error("convertRadix: carry overflow");if(r=f%n,d[i]=Math.floor(f/n),!Number.isSafeInteger(d[i])||d[i]*n+r!==f)throw new Error("convertRadix: carry overflow");e&&(d[i]?e=!1:t=i)}if(i.push(r),e)break}for(let r=0;r<e.length-1&&0===e[r];r++)i.push(0);return i.reverse()}const s=(r,e)=>e?s(e,r%e):r,f=(r,e)=>r+(e-s(r,e));function a(e,o,n,t){if(!Array.isArray(e))throw new Error("convertRadix2: data should be array");if(o<=0||o>32)throw new Error(`convertRadix2: wrong from=${o}`);if(n<=0||n>32)throw new Error(`convertRadix2: wrong to=${n}`);if(f(o,n)>32)throw new Error(`convertRadix2: carry overflow from=${o} to=${n} carryBits=${f(o,n)}`);let i=0,d=0;const s=2**n-1,a=[];for(const t of e){if(r(t),t>=2**o)throw new Error(`convertRadix2: invalid data word=${t} from=${o}`);if(i=i<<o|t,d+o>32)throw new Error(`convertRadix2: carry overflow pos=${d} from=${o}`);for(d+=o;d>=n;d-=n)a.push((i>>d-n&s)>>>0);i&=2**d-1}if(i=i<<n-d&s,!t&&d>=o)throw new Error("Excess padding");if(!t&&i)throw new Error(`Non-zero padding: ${i}`);return t&&d>0&&a.push(i>>>0),a}function c(e){return r(e),{encode:r=>{if(!(r instanceof Uint8Array))throw new Error("radix.encode input should be Uint8Array");return d(Array.from(r),256,e)},decode:r=>{if(!Array.isArray(r)||r.length&&"number"!=typeof r[0])throw new Error("radix.decode input should be array of strings");return Uint8Array.from(d(r,e,256))}}}function h(e,o=!1){if(r(e),e<=0||e>32)throw new Error("radix2: bits should be in (0..32]");if(f(8,e)>32||f(e,8)>32)throw new Error("radix2: carry overflow");return{encode:r=>{if(!(r instanceof Uint8Array))throw new Error("radix2.encode input should be Uint8Array");return a(Array.from(r),8,e,!o)},decode:r=>{if(!Array.isArray(r)||r.length&&"number"!=typeof r[0])throw new Error("radix2.decode input should be array of strings");return Uint8Array.from(a(r,e,8,o))}}}function w(r){if("function"!=typeof r)throw new Error("unsafeWrapper fn should be function");return function(...e){try{return r.apply(null,e)}catch(r){}}}function u(e,o){if(r(e),"function"!=typeof o)throw new Error("checksum fn should be function");return{encode(r){if(!(r instanceof Uint8Array))throw new Error("checksum.encode: input should be Uint8Array");const n=o(r).slice(0,e),t=new Uint8Array(r.length+e);return t.set(r),t.set(n,r.length),t},decode(r){if(!(r instanceof Uint8Array))throw new Error("checksum.decode: input should be Uint8Array");const n=r.slice(0,-e),t=o(n).slice(0,e),i=r.slice(-e);for(let r=0;r<e;r++)if(t[r]!==i[r])throw new Error("Invalid checksum");return n}}}const l={alphabet:o,chain:e,checksum:u,radix:c,radix2:h,join:n,padding:t},p=e(h(4),o("0123456789ABCDEF"),n("")),g=e(h(5),o("ABCDEFGHIJKLMNOPQRSTUVWXYZ234567"),t(5),n("")),y=e(h(5),o("0123456789ABCDEFGHIJKLMNOPQRSTUV"),t(5),n("")),b=e(h(5),o("0123456789ABCDEFGHJKMNPQRSTVWXYZ"),n(""),i((r=>r.toUpperCase().replace(/O/g,"0").replace(/[IL]/g,"1")))),E=e(h(6),o("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"),t(6),n("")),A=e(h(6),o("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"),t(6),n("")),x=r=>e(c(58),o(r),n("")),m=x("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"),$=x("123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"),v=x("rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz"),U=[0,2,3,5,6,7,9,10,11],T={encode(r){let e="";for(let o=0;o<r.length;o+=8){const n=r.subarray(o,o+8);e+=m.encode(n).padStart(U[n.length],"1")}return e},decode(r){let e=[];for(let o=0;o<r.length;o+=11){const n=r.slice(o,o+11),t=U.indexOf(n.length),i=m.decode(n);for(let r=0;r<i.length-t;r++)if(0!==i[r])throw new Error("base58xmr: wrong padding");e=e.concat(Array.from(i.slice(i.length-t)))}return Uint8Array.from(e)}},R=r=>e(u(4,(e=>r(r(e)))),m),C=e(o("qpzry9x8gf2tvdw0s3jn54khce6mua7l"),n("")),k=[996825010,642813549,513874426,1027748829,705979059];function I(r){const e=r>>25;let o=(33554431&r)<<5;for(let r=0;r<k.length;r++)1==(e>>r&1)&&(o^=k[r]);return o}function W(r,e,o=1){const n=r.length;let t=1;for(let e=0;e<n;e++){const o=r.charCodeAt(e);if(o<33||o>126)throw new Error(`Invalid prefix (${r})`);t=I(t)^o>>5}t=I(t);for(let e=0;e<n;e++)t=I(t)^31&r.charCodeAt(e);for(let r of e)t=I(t)^r;for(let r=0;r<6;r++)t=I(t);return t^=o,C.encode(a([t%2**30],30,5,!1))}function j(r){const e="bech32"===r?1:734539939,o=h(5),n=o.decode,t=o.encode,i=w(n);function d(r,o=90){if("string"!=typeof r)throw new Error("bech32.decode input should be string, not "+typeof r);if(r.length<8||!1!==o&&r.length>o)throw new TypeError(`Wrong string length: ${r.length} (${r}). Expected (8..${o})`);const n=r.toLowerCase();if(r!==n&&r!==r.toUpperCase())throw new Error("String must be lowercase or uppercase");const t=(r=n).lastIndexOf("1");if(0===t||-1===t)throw new Error('Letter "1" must be present between prefix and data only');const i=r.slice(0,t),d=r.slice(t+1);if(d.length<6)throw new Error("Data must be at least 6 characters long");const s=C.decode(d).slice(0,-6),f=W(i,s,e);if(!d.endsWith(f))throw new Error(`Invalid checksum in ${r}: expected "${f}"`);return{prefix:i,words:s}}return{encode:function(r,o,n=90){if("string"!=typeof r)throw new Error("bech32.encode prefix should be string, not "+typeof r);if(!Array.isArray(o)||o.length&&"number"!=typeof o[0])throw new Error("bech32.encode words should be array of numbers, not "+typeof o);const t=r.length+7+o.length;if(!1!==n&&t>n)throw new TypeError(`Length ${t} exceeds limit ${n}`);return`${r=r.toLowerCase()}1${C.encode(o)}${W(r,o,e)}`},decode:d,decodeToBytes:function(r){const{prefix:e,words:o}=d(r,!1);return{prefix:e,words:o,bytes:n(o)}},decodeUnsafe:w(d),fromWords:n,fromWordsUnsafe:i,toWords:t}}const S=j("bech32"),L=j("bech32m"),B={encode:r=>(new TextDecoder).decode(r),decode:r=>(new TextEncoder).encode(r)},D=e(h(4),o("0123456789abcdef"),n(""),i((r=>{if("string"!=typeof r||r.length%2)throw new TypeError(`hex.decode: expected string, got ${typeof r} with length ${r.length}`);return r.toLowerCase()}))),N={utf8:B,hex:D,base16:p,base32:g,base64:E,base64url:A,base58:m,base58xmr:T},O=`Invalid encoding type. Available types: ${Object.keys(N).join(", ")}`,P=(r,e)=>{if("string"!=typeof r||!N.hasOwnProperty(r))throw new TypeError(O);if(!(e instanceof Uint8Array))throw new TypeError("bytesToString() expects Uint8Array");return N[r].encode(e)},F=P,M=(r,e)=>{if(!N.hasOwnProperty(r))throw new TypeError(O);if("string"!=typeof e)throw new TypeError("stringToBytes() expects string");return N[r].decode(e)},z=M;export{r as assertNumber,p as base16,g as base32,b as base32crockford,y as base32hex,m as base58,R as base58check,$ as base58flickr,T as base58xmr,v as base58xrp,E as base64,A as base64url,S as bech32,L as bech32m,z as bytes,P as bytesToString,D as hex,F as str,M as stringToBytes,B as utf8,l as utils};export default null;
